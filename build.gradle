plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.0'
}

repositories {
    mavenCentral()
}
test {
    useJUnitPlatform()
}
def awsLambdaCore = '1.2.1'
def awsLambdaEvents = '3.11.0'
def lombokVersion = '1.18.22'
def jacksonCore = '2.13.3'
def validationVersion = '2.0.1.Final'
def springBootVersion = '2.7.0'
def postgresVersion = '42.3.6'
def testContainerVersion = '1.17.3'
def liquibaseVersion = '3.10.3'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "com.amazonaws:aws-lambda-java-core:${awsLambdaCore}"
    implementation "com.amazonaws:aws-lambda-java-events:${awsLambdaEvents}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonCore}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonCore}"
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    runtimeOnly "org.postgresql:postgresql:${postgresVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "javax.validation:validation-api:${validationVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainerVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
}

sourceCompatibility = 17
targetCompatibility = 17
